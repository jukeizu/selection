// Code generated by protoc-gen-go. DO NOT EDIT.
// source: selection.proto

package selectionpb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type CreateSelectionRequest struct {
	AppId                string    `protobuf:"bytes,1,opt,name=appId,proto3" json:"appId,omitempty"`
	InstanceId           string    `protobuf:"bytes,2,opt,name=instanceId,proto3" json:"instanceId,omitempty"`
	UserId               string    `protobuf:"bytes,3,opt,name=userId,proto3" json:"userId,omitempty"`
	ServerId             string    `protobuf:"bytes,4,opt,name=serverId,proto3" json:"serverId,omitempty"`
	Randomize            bool      `protobuf:"varint,5,opt,name=randomize,proto3" json:"randomize,omitempty"`
	BatchSize            int32     `protobuf:"varint,6,opt,name=batchSize,proto3" json:"batchSize,omitempty"`
	SortMethod           string    `protobuf:"bytes,7,opt,name=sortMethod,proto3" json:"sortMethod,omitempty"`
	SortKey              string    `protobuf:"bytes,8,opt,name=sortKey,proto3" json:"sortKey,omitempty"`
	Options              []*Option `protobuf:"bytes,9,rep,name=options,proto3" json:"options,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *CreateSelectionRequest) Reset()         { *m = CreateSelectionRequest{} }
func (m *CreateSelectionRequest) String() string { return proto.CompactTextString(m) }
func (*CreateSelectionRequest) ProtoMessage()    {}
func (*CreateSelectionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_selection_d5d5744acb303bf7, []int{0}
}
func (m *CreateSelectionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateSelectionRequest.Unmarshal(m, b)
}
func (m *CreateSelectionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateSelectionRequest.Marshal(b, m, deterministic)
}
func (dst *CreateSelectionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateSelectionRequest.Merge(dst, src)
}
func (m *CreateSelectionRequest) XXX_Size() int {
	return xxx_messageInfo_CreateSelectionRequest.Size(m)
}
func (m *CreateSelectionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateSelectionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateSelectionRequest proto.InternalMessageInfo

func (m *CreateSelectionRequest) GetAppId() string {
	if m != nil {
		return m.AppId
	}
	return ""
}

func (m *CreateSelectionRequest) GetInstanceId() string {
	if m != nil {
		return m.InstanceId
	}
	return ""
}

func (m *CreateSelectionRequest) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *CreateSelectionRequest) GetServerId() string {
	if m != nil {
		return m.ServerId
	}
	return ""
}

func (m *CreateSelectionRequest) GetRandomize() bool {
	if m != nil {
		return m.Randomize
	}
	return false
}

func (m *CreateSelectionRequest) GetBatchSize() int32 {
	if m != nil {
		return m.BatchSize
	}
	return 0
}

func (m *CreateSelectionRequest) GetSortMethod() string {
	if m != nil {
		return m.SortMethod
	}
	return ""
}

func (m *CreateSelectionRequest) GetSortKey() string {
	if m != nil {
		return m.SortKey
	}
	return ""
}

func (m *CreateSelectionRequest) GetOptions() []*Option {
	if m != nil {
		return m.Options
	}
	return nil
}

type Option struct {
	OptionId             string            `protobuf:"bytes,1,opt,name=optionId,proto3" json:"optionId,omitempty"`
	Content              string            `protobuf:"bytes,2,opt,name=content,proto3" json:"content,omitempty"`
	Metadata             map[string]string `protobuf:"bytes,3,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *Option) Reset()         { *m = Option{} }
func (m *Option) String() string { return proto.CompactTextString(m) }
func (*Option) ProtoMessage()    {}
func (*Option) Descriptor() ([]byte, []int) {
	return fileDescriptor_selection_d5d5744acb303bf7, []int{1}
}
func (m *Option) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Option.Unmarshal(m, b)
}
func (m *Option) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Option.Marshal(b, m, deterministic)
}
func (dst *Option) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Option.Merge(dst, src)
}
func (m *Option) XXX_Size() int {
	return xxx_messageInfo_Option.Size(m)
}
func (m *Option) XXX_DiscardUnknown() {
	xxx_messageInfo_Option.DiscardUnknown(m)
}

var xxx_messageInfo_Option proto.InternalMessageInfo

func (m *Option) GetOptionId() string {
	if m != nil {
		return m.OptionId
	}
	return ""
}

func (m *Option) GetContent() string {
	if m != nil {
		return m.Content
	}
	return ""
}

func (m *Option) GetMetadata() map[string]string {
	if m != nil {
		return m.Metadata
	}
	return nil
}

type CreateSelectionReply struct {
	Batches              []*Batch `protobuf:"bytes,1,rep,name=batches,proto3" json:"batches,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateSelectionReply) Reset()         { *m = CreateSelectionReply{} }
func (m *CreateSelectionReply) String() string { return proto.CompactTextString(m) }
func (*CreateSelectionReply) ProtoMessage()    {}
func (*CreateSelectionReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_selection_d5d5744acb303bf7, []int{2}
}
func (m *CreateSelectionReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateSelectionReply.Unmarshal(m, b)
}
func (m *CreateSelectionReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateSelectionReply.Marshal(b, m, deterministic)
}
func (dst *CreateSelectionReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateSelectionReply.Merge(dst, src)
}
func (m *CreateSelectionReply) XXX_Size() int {
	return xxx_messageInfo_CreateSelectionReply.Size(m)
}
func (m *CreateSelectionReply) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateSelectionReply.DiscardUnknown(m)
}

var xxx_messageInfo_CreateSelectionReply proto.InternalMessageInfo

func (m *CreateSelectionReply) GetBatches() []*Batch {
	if m != nil {
		return m.Batches
	}
	return nil
}

type Batch struct {
	Options              []*BatchOption `protobuf:"bytes,1,rep,name=options,proto3" json:"options,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *Batch) Reset()         { *m = Batch{} }
func (m *Batch) String() string { return proto.CompactTextString(m) }
func (*Batch) ProtoMessage()    {}
func (*Batch) Descriptor() ([]byte, []int) {
	return fileDescriptor_selection_d5d5744acb303bf7, []int{3}
}
func (m *Batch) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Batch.Unmarshal(m, b)
}
func (m *Batch) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Batch.Marshal(b, m, deterministic)
}
func (dst *Batch) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Batch.Merge(dst, src)
}
func (m *Batch) XXX_Size() int {
	return xxx_messageInfo_Batch.Size(m)
}
func (m *Batch) XXX_DiscardUnknown() {
	xxx_messageInfo_Batch.DiscardUnknown(m)
}

var xxx_messageInfo_Batch proto.InternalMessageInfo

func (m *Batch) GetOptions() []*BatchOption {
	if m != nil {
		return m.Options
	}
	return nil
}

type BatchOption struct {
	Number               int32    `protobuf:"varint,1,opt,name=number,proto3" json:"number,omitempty"`
	Option               *Option  `protobuf:"bytes,2,opt,name=option,proto3" json:"option,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BatchOption) Reset()         { *m = BatchOption{} }
func (m *BatchOption) String() string { return proto.CompactTextString(m) }
func (*BatchOption) ProtoMessage()    {}
func (*BatchOption) Descriptor() ([]byte, []int) {
	return fileDescriptor_selection_d5d5744acb303bf7, []int{4}
}
func (m *BatchOption) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BatchOption.Unmarshal(m, b)
}
func (m *BatchOption) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BatchOption.Marshal(b, m, deterministic)
}
func (dst *BatchOption) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BatchOption.Merge(dst, src)
}
func (m *BatchOption) XXX_Size() int {
	return xxx_messageInfo_BatchOption.Size(m)
}
func (m *BatchOption) XXX_DiscardUnknown() {
	xxx_messageInfo_BatchOption.DiscardUnknown(m)
}

var xxx_messageInfo_BatchOption proto.InternalMessageInfo

func (m *BatchOption) GetNumber() int32 {
	if m != nil {
		return m.Number
	}
	return 0
}

func (m *BatchOption) GetOption() *Option {
	if m != nil {
		return m.Option
	}
	return nil
}

type ParseSelectionRequest struct {
	AppId                string   `protobuf:"bytes,1,opt,name=appId,proto3" json:"appId,omitempty"`
	InstanceId           string   `protobuf:"bytes,2,opt,name=instanceId,proto3" json:"instanceId,omitempty"`
	UserId               string   `protobuf:"bytes,3,opt,name=userId,proto3" json:"userId,omitempty"`
	ServerId             string   `protobuf:"bytes,4,opt,name=serverId,proto3" json:"serverId,omitempty"`
	Content              string   `protobuf:"bytes,5,opt,name=content,proto3" json:"content,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ParseSelectionRequest) Reset()         { *m = ParseSelectionRequest{} }
func (m *ParseSelectionRequest) String() string { return proto.CompactTextString(m) }
func (*ParseSelectionRequest) ProtoMessage()    {}
func (*ParseSelectionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_selection_d5d5744acb303bf7, []int{5}
}
func (m *ParseSelectionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ParseSelectionRequest.Unmarshal(m, b)
}
func (m *ParseSelectionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ParseSelectionRequest.Marshal(b, m, deterministic)
}
func (dst *ParseSelectionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ParseSelectionRequest.Merge(dst, src)
}
func (m *ParseSelectionRequest) XXX_Size() int {
	return xxx_messageInfo_ParseSelectionRequest.Size(m)
}
func (m *ParseSelectionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ParseSelectionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ParseSelectionRequest proto.InternalMessageInfo

func (m *ParseSelectionRequest) GetAppId() string {
	if m != nil {
		return m.AppId
	}
	return ""
}

func (m *ParseSelectionRequest) GetInstanceId() string {
	if m != nil {
		return m.InstanceId
	}
	return ""
}

func (m *ParseSelectionRequest) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *ParseSelectionRequest) GetServerId() string {
	if m != nil {
		return m.ServerId
	}
	return ""
}

func (m *ParseSelectionRequest) GetContent() string {
	if m != nil {
		return m.Content
	}
	return ""
}

type RankedOption struct {
	Rank                 int32    `protobuf:"varint,1,opt,name=rank,proto3" json:"rank,omitempty"`
	Option               *Option  `protobuf:"bytes,2,opt,name=option,proto3" json:"option,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RankedOption) Reset()         { *m = RankedOption{} }
func (m *RankedOption) String() string { return proto.CompactTextString(m) }
func (*RankedOption) ProtoMessage()    {}
func (*RankedOption) Descriptor() ([]byte, []int) {
	return fileDescriptor_selection_d5d5744acb303bf7, []int{6}
}
func (m *RankedOption) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RankedOption.Unmarshal(m, b)
}
func (m *RankedOption) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RankedOption.Marshal(b, m, deterministic)
}
func (dst *RankedOption) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RankedOption.Merge(dst, src)
}
func (m *RankedOption) XXX_Size() int {
	return xxx_messageInfo_RankedOption.Size(m)
}
func (m *RankedOption) XXX_DiscardUnknown() {
	xxx_messageInfo_RankedOption.DiscardUnknown(m)
}

var xxx_messageInfo_RankedOption proto.InternalMessageInfo

func (m *RankedOption) GetRank() int32 {
	if m != nil {
		return m.Rank
	}
	return 0
}

func (m *RankedOption) GetOption() *Option {
	if m != nil {
		return m.Option
	}
	return nil
}

type ParseSelectionReply struct {
	RankedOptions        []*RankedOption `protobuf:"bytes,1,rep,name=rankedOptions,proto3" json:"rankedOptions,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *ParseSelectionReply) Reset()         { *m = ParseSelectionReply{} }
func (m *ParseSelectionReply) String() string { return proto.CompactTextString(m) }
func (*ParseSelectionReply) ProtoMessage()    {}
func (*ParseSelectionReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_selection_d5d5744acb303bf7, []int{7}
}
func (m *ParseSelectionReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ParseSelectionReply.Unmarshal(m, b)
}
func (m *ParseSelectionReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ParseSelectionReply.Marshal(b, m, deterministic)
}
func (dst *ParseSelectionReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ParseSelectionReply.Merge(dst, src)
}
func (m *ParseSelectionReply) XXX_Size() int {
	return xxx_messageInfo_ParseSelectionReply.Size(m)
}
func (m *ParseSelectionReply) XXX_DiscardUnknown() {
	xxx_messageInfo_ParseSelectionReply.DiscardUnknown(m)
}

var xxx_messageInfo_ParseSelectionReply proto.InternalMessageInfo

func (m *ParseSelectionReply) GetRankedOptions() []*RankedOption {
	if m != nil {
		return m.RankedOptions
	}
	return nil
}

func init() {
	proto.RegisterType((*CreateSelectionRequest)(nil), "selectionpb.CreateSelectionRequest")
	proto.RegisterType((*Option)(nil), "selectionpb.Option")
	proto.RegisterMapType((map[string]string)(nil), "selectionpb.Option.MetadataEntry")
	proto.RegisterType((*CreateSelectionReply)(nil), "selectionpb.CreateSelectionReply")
	proto.RegisterType((*Batch)(nil), "selectionpb.Batch")
	proto.RegisterType((*BatchOption)(nil), "selectionpb.BatchOption")
	proto.RegisterType((*ParseSelectionRequest)(nil), "selectionpb.ParseSelectionRequest")
	proto.RegisterType((*RankedOption)(nil), "selectionpb.RankedOption")
	proto.RegisterType((*ParseSelectionReply)(nil), "selectionpb.ParseSelectionReply")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// SelectionClient is the client API for Selection service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type SelectionClient interface {
	CreateSelection(ctx context.Context, in *CreateSelectionRequest, opts ...grpc.CallOption) (*CreateSelectionReply, error)
	ParseSelection(ctx context.Context, in *ParseSelectionRequest, opts ...grpc.CallOption) (*ParseSelectionReply, error)
}

type selectionClient struct {
	cc *grpc.ClientConn
}

func NewSelectionClient(cc *grpc.ClientConn) SelectionClient {
	return &selectionClient{cc}
}

func (c *selectionClient) CreateSelection(ctx context.Context, in *CreateSelectionRequest, opts ...grpc.CallOption) (*CreateSelectionReply, error) {
	out := new(CreateSelectionReply)
	err := c.cc.Invoke(ctx, "/selectionpb.Selection/CreateSelection", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *selectionClient) ParseSelection(ctx context.Context, in *ParseSelectionRequest, opts ...grpc.CallOption) (*ParseSelectionReply, error) {
	out := new(ParseSelectionReply)
	err := c.cc.Invoke(ctx, "/selectionpb.Selection/ParseSelection", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// SelectionServer is the server API for Selection service.
type SelectionServer interface {
	CreateSelection(context.Context, *CreateSelectionRequest) (*CreateSelectionReply, error)
	ParseSelection(context.Context, *ParseSelectionRequest) (*ParseSelectionReply, error)
}

func RegisterSelectionServer(s *grpc.Server, srv SelectionServer) {
	s.RegisterService(&_Selection_serviceDesc, srv)
}

func _Selection_CreateSelection_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateSelectionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SelectionServer).CreateSelection(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/selectionpb.Selection/CreateSelection",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SelectionServer).CreateSelection(ctx, req.(*CreateSelectionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Selection_ParseSelection_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ParseSelectionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SelectionServer).ParseSelection(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/selectionpb.Selection/ParseSelection",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SelectionServer).ParseSelection(ctx, req.(*ParseSelectionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Selection_serviceDesc = grpc.ServiceDesc{
	ServiceName: "selectionpb.Selection",
	HandlerType: (*SelectionServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateSelection",
			Handler:    _Selection_CreateSelection_Handler,
		},
		{
			MethodName: "ParseSelection",
			Handler:    _Selection_ParseSelection_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "selection.proto",
}

func init() { proto.RegisterFile("selection.proto", fileDescriptor_selection_d5d5744acb303bf7) }

var fileDescriptor_selection_d5d5744acb303bf7 = []byte{
	// 500 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xc4, 0x54, 0xdd, 0x8a, 0xd3, 0x40,
	0x14, 0x36, 0xed, 0x26, 0x6d, 0x4f, 0x5d, 0x57, 0xce, 0xae, 0xcb, 0x58, 0x44, 0xb2, 0xf1, 0xa6,
	0xa0, 0xf6, 0xa2, 0xde, 0x88, 0x8b, 0x08, 0xfe, 0x5c, 0x14, 0x59, 0x56, 0x66, 0x41, 0x04, 0xaf,
	0xa6, 0xcd, 0x81, 0x2d, 0x6d, 0x27, 0x71, 0x32, 0x5d, 0x88, 0xaf, 0xe2, 0x03, 0xf8, 0x0e, 0x5e,
	0xfa, 0x64, 0x32, 0x93, 0x49, 0x9a, 0x74, 0x6b, 0xc1, 0x2b, 0xef, 0xf2, 0x7d, 0xdf, 0xf9, 0xfb,
	0xce, 0x19, 0x02, 0x47, 0x19, 0x2d, 0x69, 0xa6, 0xe7, 0x89, 0x1c, 0xa5, 0x2a, 0xd1, 0x09, 0xf6,
	0x2b, 0x22, 0x9d, 0x46, 0x3f, 0x5b, 0x70, 0xfa, 0x4e, 0x91, 0xd0, 0x74, 0x55, 0xb2, 0x9c, 0xbe,
	0xad, 0x29, 0xd3, 0x78, 0x02, 0xbe, 0x48, 0xd3, 0x49, 0xcc, 0xbc, 0xd0, 0x1b, 0xf6, 0x78, 0x01,
	0xf0, 0x31, 0xc0, 0x5c, 0x66, 0x5a, 0xc8, 0x19, 0x4d, 0x62, 0xd6, 0xb2, 0x52, 0x8d, 0xc1, 0x53,
	0x08, 0xd6, 0x19, 0xa9, 0x49, 0xcc, 0xda, 0x56, 0x73, 0x08, 0x07, 0xd0, 0xcd, 0x48, 0xdd, 0x58,
	0xe5, 0xc0, 0x2a, 0x15, 0xc6, 0x47, 0xd0, 0x53, 0x42, 0xc6, 0xc9, 0x6a, 0xfe, 0x9d, 0x98, 0x1f,
	0x7a, 0xc3, 0x2e, 0xdf, 0x10, 0x46, 0x9d, 0x0a, 0x3d, 0xbb, 0xbe, 0x32, 0x6a, 0x10, 0x7a, 0x43,
	0x9f, 0x6f, 0x08, 0x33, 0x4f, 0x96, 0x28, 0x7d, 0x41, 0xfa, 0x3a, 0x89, 0x59, 0xa7, 0x98, 0x67,
	0xc3, 0x20, 0x83, 0x8e, 0x41, 0x1f, 0x29, 0x67, 0x5d, 0x2b, 0x96, 0x10, 0x9f, 0x43, 0x27, 0x49,
	0x8d, 0xe1, 0x8c, 0xf5, 0xc2, 0xf6, 0xb0, 0x3f, 0x3e, 0x1e, 0xd5, 0x36, 0x33, 0xba, 0xb4, 0x1a,
	0x2f, 0x63, 0xa2, 0x5f, 0x1e, 0x04, 0x05, 0x67, 0xbc, 0x14, 0x6c, 0xb5, 0x9c, 0x0a, 0x9b, 0x7e,
	0xb3, 0x44, 0x6a, 0x92, 0xda, 0x2d, 0xa7, 0x84, 0xf8, 0x1a, 0xba, 0x2b, 0xd2, 0x22, 0x16, 0x5a,
	0xb0, 0xb6, 0x6d, 0x78, 0xb6, 0xa3, 0xe1, 0xe8, 0xc2, 0xc5, 0x7c, 0x90, 0x5a, 0xe5, 0xbc, 0x4a,
	0x19, 0x9c, 0xc3, 0x61, 0x43, 0xc2, 0xfb, 0xd0, 0x5e, 0x50, 0xee, 0x06, 0x30, 0x9f, 0xe6, 0x62,
	0x37, 0x62, 0xb9, 0x26, 0xd7, 0xb9, 0x00, 0xaf, 0x5a, 0x2f, 0xbd, 0xe8, 0x3d, 0x9c, 0xdc, 0xba,
	0x72, 0xba, 0xcc, 0xf1, 0x19, 0x74, 0xec, 0x2a, 0x29, 0x63, 0x9e, 0x1d, 0x09, 0x1b, 0x23, 0xbd,
	0x35, 0x1a, 0x2f, 0x43, 0xa2, 0x73, 0xf0, 0x2d, 0x83, 0xe3, 0xcd, 0xea, 0x8a, 0x34, 0x76, 0x3b,
	0x6d, 0x7b, 0x7f, 0x1c, 0xfa, 0x35, 0xde, 0xbc, 0x13, 0xb9, 0x5e, 0x4d, 0x49, 0x59, 0x03, 0x3e,
	0x77, 0x08, 0x9f, 0x42, 0x50, 0x64, 0x58, 0x13, 0x7f, 0x39, 0x8a, 0x0b, 0x89, 0x7e, 0x78, 0xf0,
	0xe0, 0x93, 0x50, 0xd9, 0xff, 0x7c, 0xbc, 0xb5, 0x83, 0xfb, 0x8d, 0x83, 0x47, 0x97, 0x70, 0x97,
	0x0b, 0xb9, 0xa0, 0xd8, 0x59, 0x46, 0x38, 0x50, 0x42, 0x2e, 0x9c, 0x61, 0xfb, 0xfd, 0x6f, 0x76,
	0x3f, 0xc3, 0xf1, 0xb6, 0x5b, 0x73, 0xc4, 0x37, 0x70, 0xa8, 0x6a, 0x7d, 0xca, 0x9b, 0x3c, 0x6c,
	0x94, 0xaa, 0x4f, 0xc2, 0x9b, 0xf1, 0xe3, 0xdf, 0x1e, 0xf4, 0xaa, 0x9a, 0xf8, 0x15, 0x8e, 0xb6,
	0xde, 0x0a, 0x3e, 0x69, 0x94, 0xda, 0xfd, 0xbf, 0x18, 0x9c, 0xed, 0x0f, 0x4a, 0x97, 0x79, 0x74,
	0x07, 0xbf, 0xc0, 0xbd, 0xa6, 0x05, 0x8c, 0x1a, 0x69, 0x3b, 0xaf, 0x39, 0x08, 0xf7, 0xc6, 0xd8,
	0xca, 0xd3, 0xc0, 0xfe, 0xdd, 0x5e, 0xfc, 0x09, 0x00, 0x00, 0xff, 0xff, 0x78, 0x0e, 0x72, 0x88,
	0xf0, 0x04, 0x00, 0x00,
}
